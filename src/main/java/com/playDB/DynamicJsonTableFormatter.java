package com.playDB;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

import java.util.LinkedList;
import java.util.Set;


/*
* **********************************************************************
* Filename: DynamicJsonTableFormatter.java
* Author: Jonathan Kevin Selvadurai
* Date: February,2,2024
* Description: Converts JSON Object to tabular output format.
* Code generated by ChatGPT. 
* 
* **********************************************************************/

public class DynamicJsonTableFormatter {

    public static void main(String[] args) {
        // Create a linked list to hold JSON strings
        LinkedList<String> jsonStrings = new LinkedList<>();

        // Add JSON strings dynamically
        jsonStrings.add("{\"name\":\"John\",\"age\":30,\"city\":\"New York\"}");
        jsonStrings.add("{\"name\":\"Alice\",\"age\":25,\"city\":\"London\", \"department\":\"HR\"}");

        // Print headers
        JsonObject firstObject = JsonParser.parseString(jsonStrings.getFirst()).getAsJsonObject();
        Set<String> fieldNames = firstObject.keySet();
        printHeaders(fieldNames);

        // Print data in tabular format
        for (String jsonString : jsonStrings) {
            printJsonObject(jsonString, fieldNames);
        }
    }
    //Print Headers of Json Object in tabular format
    public static void printHeaders(Set<String> fieldNames) {
       
    	// Print headers at the top
        System.out.println("--------------------------------------------");
        
        for (String fieldName : fieldNames) {
            System.out.printf("| %-15s ", fieldName);
        }
        
        System.out.println("|");
        System.out.println("--------------------------------------------");
    }

    //Print Values of Json Object in tabular format
    public static void printJsonObject(String jsonString, Set<String> fieldNames) {
        
    	JsonObject jsonObject = JsonParser.parseString(jsonString).getAsJsonObject();

        // Print the contents of the JsonObject
        System.out.println("--------------------------------------------");
        for (String fieldName : fieldNames) {
        	
        	if(jsonObject.get(fieldName)!=null) {
        	
              //Get fieldName value		 
              JsonElement value = jsonObject.get(fieldName);
              
              //Print value
              System.out.printf("| %-15s ", value.isJsonPrimitive() ? value.getAsString() : value);
        	}
        	else {
  
                 System.out.printf("| %-15s ", " ");
        	}
        }
        System.out.println("|");
    }
}




